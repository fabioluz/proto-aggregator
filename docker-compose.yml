version: '3.8'

services:
  kafka:
    image: 'bitnami/kafka:latest'
    hostname: kafka
    container_name: kafka
    ports:
      - '9094:9094'
    networks:
      - aggregator_network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://kafka:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  postgresql:
    image: 'bitnami/postgresql:latest'
    hostname: postgresql
    container_name: postgresql
    ports:
      - 5432:5432
    networks:
      - aggregator_network
    environment:
      - POSTGRESQL_DATABASE=proto_parser_db
      - POSTGRESQL_USERNAME=my_user
      - POSTGRESQL_PASSWORD=password123

  gcs-mock:
    image: fsouza/fake-gcs-server
    hostname: gcs-mock
    container_name: gcs-mock
    ports:
      - 4443:4443
    networks:
      - aggregator_network
    volumes:
      - ${PWD}/data:/data
    entrypoint: ["/bin/fake-gcs-server", "-data", "/data", "-scheme", "http", "-public-host", "gcs-mock:4443"]

  aggregator:
    build: .
    environment:
      - DB_HOST=postgresql
      - DB_USER=my_user
      - DB_PASSWORD=password123
      - DB_NAME=proto_parser_db
      - KAFKA_HOST=kafka:9094
      - GCS_ENDPOINT=http://gcs-mock:4443/storage/v1/
    ports:
      - 8080:8080
    networks:
      - aggregator_network
    depends_on:
      - kafka
      - postgresql
      - gcs-mock

networks:
  aggregator_network: